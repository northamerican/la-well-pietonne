---
import { t } from "astro-i18n";
import type { EventInfo } from "../../types";
import { astroI18n } from "astro-i18n";

const { langCode } = astroI18n;

const events: EventInfo[] = [
  {
    name: {
      fr: "Table d'infos Wellington / 1re av",
      en: "Info table Wellington / 1re av",
    },
    location: {
      fr: `Wellington / 1re av`,
      en: `Wellington / 1re av`,
    },
    description: {
      fr: `Table d'infos, autocollants, bonjour`,
      en: `Info table, stickers, hello`,
    },
    // href: "https://www.facebook.com/events/8076263022397115",
    dateStart: new Date("2024-09-11T13:00:00-04:00"),
    dateEnd: new Date("2024-09-11T17:00:00-04:00"),
  },
];

const upcomingEvents = events.filter((event) => {
  // Expire event after about a day
  const dateExpire = new Date(event.dateEnd);
  dateExpire.setDate(dateExpire.getDate() + 1);

  return dateExpire > new Date();
});
---

{upcomingEvents.length ? <h2>{t("upcomingEvents")}</h2> : null}
<ul>
  {
    upcomingEvents.map(
      ({ name, location, description, href, dateStart, dateEnd }) => (
        <li>
          <h3>
            {href ? (
              <a href={href} target="_blank">
                {name[langCode]}
              </a>
            ) : (
              name[langCode]
            )}
          </h3>
          <span>
            {Intl.DateTimeFormat(t("isoLangCode"), {
              year: "numeric",
              month: "long",
              weekday: "long",
              day: "numeric",
              hour: "numeric",
              timeZone: "America/Montreal",
            }).formatRange(dateStart, dateEnd)}
          </span>
          <br />
          <em>{location[langCode]}</em>
          <br />
          <span>{description[langCode]}</span>
          <br />
        </li>
      )
    )
  }
</ul>

<style>
  li {
    list-style: none;
    padding-left: 0;
  }

  h3 {
    margin-block: 0;
  }
</style>
